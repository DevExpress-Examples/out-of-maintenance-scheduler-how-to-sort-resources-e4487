@Html.DevExpress().Scheduler(
    settings => {
        settings.Name = "scheduler";
        settings.CallbackRouteValues = new { Controller = "Home", Action = "SchedulerPartial" };

        settings.Storage.Appointments.Assign(SchedulerDataHelper.DefaultAppointmentStorage);
        settings.Storage.Resources.Assign(SchedulerDataHelper.DefaultResourceStorage);
        settings.Storage.EnableReminders = false;
        settings.OptionsCustomization.AllowAppointmentCreate = UsedAppointmentType.None;
        settings.OptionsCustomization.AllowAppointmentEdit = UsedAppointmentType.None;
        settings.OptionsCustomization.AllowAppointmentDelete = UsedAppointmentType.None;

        settings.ActiveViewType = SchedulerViewType.Timeline;
        settings.GroupType = SchedulerGroupType.Resource;

        settings.ResourceCollectionLoaded = (s, e) => {
            MVCxSchedulerStorage storage = (MVCxSchedulerStorage)s;
            IComparer<Resource> comparer = null;

            ResourcesSortOrder sortOrder = ViewBag.ResourcesSortType != null ? (ResourcesSortOrder)ViewBag.ResourcesSortType : 0;
            
            switch ((sortOrder)) {
                case ResourcesSortOrder.None:
                    return;
                case ResourcesSortOrder.Ascending:
                    comparer = new ResourceCaptionComparer();
                    break;
                case ResourcesSortOrder.Descending:
                    comparer = new ResourceCaptionReverseComparer();
                    break;
                case ResourcesSortOrder.NOfAppointments:
                    comparer = new ResourceNOfAppointmentsComparer(storage);
                    break;
            }

            storage.Resources.Items.Sort(comparer);
        };

        settings.Start = new DateTime(2012, 4, 18);
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['ResourcesSortType'] = ResourcesSortType.GetValue(); }";

    }).Bind(Model.Appointments, Model.Resources).GetHtml()